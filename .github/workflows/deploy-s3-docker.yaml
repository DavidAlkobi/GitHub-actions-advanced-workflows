name: deploy-s3-docker
on: push

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
         - name: Checkout code
           uses: actions/checkout@v3
         - name: Get dependencies and install
           id: cache
           uses:  ./.github/actions/cached-deps
           with:
            caching: 'false'
         - name: Output information
           run: echo "Cache used? ${{ steps.cache.outputs.used-cache }}"
         - name: lint
           run: npm run lint
    test:
        continue-on-error: true
        runs-on: ubuntu-latest
        steps:
         - name: Checkout code
           uses: actions/checkout@v3
         - name: Get dependencies and install
           uses: ./.github/actions/cached-deps
         - name: test
           continue-on-error: true
           id: test
           run: npm test
         - name: Upload test report
           if: failure() && steps.test.outcome == 'failure'
           uses: actions/upload-artifact@v4.0.0
           with:
            name: test-report
            path: test.json
    build:
        needs: test
        runs-on: ubuntu-latest
        outputs: 
          script-file: ${{ steps.publish.outputs.script-file }}
        steps:
         - name: Checkout code
           uses: actions/checkout@v3
         - name: Get dependencies and install
           uses:  ./.github/actions/cached-deps
         - name: Build
           run: npm run build
         - name: Publish JS filename
           id: publish
           run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
         - name: Upload artifact
           uses: actions/upload-artifact@v4.0.0
           with:
            name: dist-files
            path: dist
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          - name: Get artifact
            uses: actions/download-artifact@v4
            with: 
              name: dist-files
              path: ./dist
          - name: Deploy to AWS S3
            id: deploy
            uses: ./.github/actions/deploy-s3-docker
            env: 
              AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
              AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            with: 
              bucket: web-hosting-github
              region: us-east-1
              dist-folder: ./dist
          - name: Output S3 URL
            run: |
              echo "live URL: ${{ steps.deploy.outputs.website-url }}"

    print-deploy-result:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
        - name: Print deploy result
          run: echo "${{ needs.deploy.outputs.result }}"
           
    report:
      needs: [lint ,deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: Output information
          run: | 
            echo "Something went wrong"
            echo "${{ github.event }}"
        
